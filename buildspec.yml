version: 0.2
phases:
  pre_build:
    commands:
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY 
  install:
    commands:
      - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.24.11/2023-03-17/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
      - kubectl version --short --client
      - aws eks --region us-west-2 update-kubeconfig --name sandeep-chandu-cluster
      - export TAG=$CODEBUILD_RESOLVED_SOURCE_VERSION
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"

  build:
    commands:
      - kubectl get pods
      - docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$TAG .
      - docker push $ECR_REGISTRY/$ECR_REPOSITORY:$TAG
      - kubectl set image deployment/python-server-github python-server-app=$ECR_REGISTRY/$ECR_REPOSITORY:$TAG
      #1. Build Image and push to ECR
      #- cd app
      #- docker build -t $ECR_REPO_URI:$TAG .
      #- $(aws ecr get-login --no-include-email)
      #- docker push $ECR_REPO_URI:$TAG
      #2. deploy newer app
      #- kubectl apply -f k8s/  